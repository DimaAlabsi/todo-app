{"version":3,"sources":["context/SettingContext.js","components/Header.js","hooks/Form.js","components/List.js","components/Todo.js","components/Footer.js","App.js","index.js"],"names":["SettingssContext","React","createContext","SettingContext","props","Provider","value","show","sort","itemsPerPage","children","Header","class","Group","align","Alignment","LEFT","Heading","Divider","className","icon","text","Component","useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","List","settings","useContext","numOfItems","list","map","item","assignee","difficulty","onClick","toggleComplete","id","complete","toString","ToDo","setList","incomplete","setIncomplete","uuid","useEffect","incompleteCount","filter","length","document","title","interactive","elevation","Elevation","TWO","onSubmit","onChange","type","placeholder","defaultValue","min","max","rightIcon","intent","items","Footer","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.89da5ccd.chunk.js","sourcesContent":["import React from 'react';\nexport const SettingssContext=React.createContext();\n\n function SettingContext(props) {\n    const state={\nshow:false,\nsort:'To Do',\nitemsPerPage: 3,\n    }\n    return (\n        <>\n          <SettingssContext.Provider value={state}>\n          {props.children}\n          </SettingssContext.Provider>  \n        </>\n    )\n}\n\nexport default SettingContext;\n\n","import React, { Component } from 'react';\nimport { Navbar, Button, Alignment } from \"@blueprintjs/core\";\n\n class Header extends Component {\n    render() {\n        return (\n            <Navbar class=\"bp3-navbar bp3-dark\">\n            <Navbar.Group align={Alignment.LEFT}>\n                <Navbar.Heading>TO DO List Manager ðŸ“”</Navbar.Heading>\n                <Navbar.Divider />\n                <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n                <span class=\"bp3-navbar-divider\"></span>\n      <Button class=\"bp3-Button bp3-minimal bp3-icon-user\"></Button>\n      <Button class=\"bp3-Button bp3-minimal bp3-icon-notifications\"></Button>\n      <Button class=\"bp3-button bp3-minimal bp3-icon-cog\"></Button>\n            </Navbar.Group>\n        </Navbar>\n        )\n    }\n}\n\nexport default Header\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;","import React from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { useEffect } from 'react';\nimport{SettingssContext} from '../context/SettingContext';\nimport { Button } from '@blueprintjs/core';\nfunction List(props) {\n  const settings = useContext(SettingssContext)\n    const [pageNumber, setPageNumber] = useState(0);\n    const usersPerPage = settings.numOfItems;\n    const pagesVisited = pageNumber * usersPerPage;\n  \n      const changePage = ({ selected }) => {\n        setPageNumber(selected);\n      };\n    return (\n      <>\n \n {props.list.map((item) => {\n        return (\n<>\n<div key={item.id}>\n          <p>{item.text}</p>\n          <p><small>Assigned to: {item.assignee}</small></p>\n          <p><small>Difficulty: {item.difficulty}</small></p>\n         \n          <Button icon=\"refresh\" onClick={() => props.toggleComplete(item.id)}> Complete: {item.complete.toString()} </Button>\n\n{/* <button onClick={() => props.toggleComplete(item.id)}>Complete: {item.complete.toString()}</button> */}\n\n            <hr></hr>\n          </div>\n          </>\n        );\n      })}\n      </>\n    );\n  }\n  \n  export default List;","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport useForm from '../hooks/Form';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\nimport { Button } from '@blueprintjs/core';\nimport {  Card, Elevation } from \"@blueprintjs/core\";\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n\n\n    <Card interactive={true} elevation={Elevation.TWO}>\n    <div className=\"mainsec\">\n    <h2 id='h2'>To Do List: {incomplete.length} items pending </h2>\n\n    <div className=\"mainCards\">\n\n\n    <form onSubmit={handleSubmit}>\n\n<h2>Add To Do Item</h2>\n\n<label>\n  <span>To Do Item</span>\n  <input onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\"  class=\"bp3-input .modifier\"  type=\"text\" dir=\"auto\" />\n\n</label>\n\n<label>\n  <span>Assigned To</span>\n  <input class=\"bp3-input .modifier\"  type=\"text\"  onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" dir=\"auto\" />\n\n</label>\n\n<label>\n  <span>Difficulty</span>\n\n  <input  onChange={handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" class=\"bp3-input .modifier\"  type=\"text\"  dir=\"auto\" />\n\n</label>\n\n<label>\n  <Button   type=\"submit\" rightIcon=\"arrow-right\" intent=\"success\" text=\"Add Item\" />\n\n</label>\n</form>\n      <List  list={list} toggleComplete={toggleComplete} />\n    </div>\n  </div>\n  </Card>\n  );\n};\n\nexport default ToDo;","import React, { Component } from 'react';\n\n class Footer extends Component {\n    render() {\n        return (\n            <div className=\"bp3-navbar bp3-dark\" id=\"footer\" >\n            <p> &copy; Dima Alabsi 2021 </p>    \n            </div>\n        )\n    }\n}\n\nexport default Footer\n","import React from 'react';\nimport SettingssContext from './context/SettingContext';\nimport Header from './components/Header';\nimport ToDo from './components/Todo';\nimport Footer from './components/Footer';\nimport './App.scss'\nexport default class App extends React.Component {\n  render() {\n    return (\n        <>\n        <SettingssContext>\n        <Header/>\n      <ToDo />\n      <Footer/>\n      </SettingssContext>\n      </>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}