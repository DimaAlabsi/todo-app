{"version":3,"sources":["hooks/Form.js","context/SettingContext.js","components/Auth.js","components/List.js","components/Setting.js","components/Todo.js","context/loginContext.js","components/Login.js","components/Header.js","components/Footer.js","components/Signup.js","App.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","SettingssContext","React","createContext","SettingContext","props","display","setDisplay","numOfItems","setNumOfItems","defaultSort","setDefaultSort","state","useEffect","stringArray","localStorage","getItem","objectArray","JSON","parse","Number","numberOfItem","clear","Provider","children","Auth","context","useContext","LoginContext","isLoggedIn","loggedIn","canDo","capability","can","okToRender","condition","List","settings","pageNumber","setPageNumber","usersPage","pages","displayUsers","list","slice","map","item","style","width","margin","text","assignee","difficulty","onClick","toggleComplete","id","complete","toString","background","intent","deleteItem","pageCount","Math","ceil","length","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","SettingForm","className","interactive","elevation","Elevation","TWO","onSubmit","e","obj","setItem","stringify","disply","reset","window","location","href","label","labelFor","dir","type","placeholder","ToDo","login","setList","incomplete","setIncomplete","uuid","incompleteCount","filter","document","title","onChange","class","defaultValue","min","max","rightIcon","items","Setting","LoginProvider","setLoggedIn","user","setUser","qs","URLSearchParams","search","cookieToken","cookie","load","token","get","validateJwToken","username","password","a","encodedUsernameAndPassword","base64","encode","toUpperCase","superagent","post","set","response","body","data","jwt","decode","setLoginState","save","logout","remove","listData","parsedData","capabilities","includes","LoginForm","Header","Group","align","Alignment","LEFT","Heading","Divider","Component","Signup","App","this","contextType","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.09dd3bd8.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;","import React from 'react';\nexport const SettingssContext = React.createContext();\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n function SettingContext(props) {\n\nconst [display,setDisplay]=useState(false)\nconst [numOfItems,setNumOfItems]=useState(2)\nconst [defaultSort,setDefaultSort]=useState('do')\nconst state ={\ndisplay ,\nnumOfItems,\ndefaultSort,\nsetDisplay,\nsetNumOfItems,\nsetDefaultSort\n}\nuseEffect(()=>{\nlet stringArray =localStorage.getItem('SettingForm');\nlet objectArray= JSON.parse(stringArray);\n\nif(objectArray){\n    setNumOfItems(Number(objectArray.numberOfItem))\n}\nlocalStorage.clear()\n},[])\n\n    return (\n        <>\n          <SettingssContext.Provider value={state}>\n          {props.children}\n          </SettingssContext.Provider>  \n        </>\n    )\n}\n\nexport default SettingContext;\n\n","import React ,{useContext}from 'react';\nimport {When} from 'react-if';\n\nimport { LoginContext } from '../context/loginContext';\n\nexport default function Auth(props) {\n\nconst  context = useContext(LoginContext)\n\n    const isLoggedIn = context.loggedIn;\n    const canDo = props.capability ? context.can(props.capability) : true;\n    const okToRender = isLoggedIn && canDo;\n   \n\n    return (\n      <When condition={okToRender}>\n        {props.children}\n      </When>\n    );\n    \n} \n\n","import React from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { SettingssContext } from '../context/SettingContext';\nimport { Button } from '@blueprintjs/core';\nimport ReactPaginate from \"react-paginate\";\nimport Auth from './Auth'\nfunction List(props) {\n  const settings = useContext(SettingssContext)\n  const [pageNumber, setPageNumber] = useState(0);\n  const usersPage = settings.numOfItems;\n  const pages = pageNumber * usersPage;\n\n  const displayUsers = props.list.slice(pages, pages + usersPage)\n    .map((item) => {\n      return (\n\n        <div key={item.id} style={{ width: \"650px\", margin: \"15px\" }}>\n\n          <p>{item.text}</p>\n          <p>\n            <small>Assigned to: {item.assignee}</small>\n          </p>\n          <p>\n            <small>Difficulty: {item.difficulty}</small>\n          </p>\n\n          {/* <Button  onClick={() => props.toggleComplete(item.id)}>\n            Complete: {item.complete.toString()}</Button>\n            <Button  onClick={() => props.deleteItem(item.id)} type=\"submit\"  intent=\"danger\" text=\"delete\" /> */}\n\n<Auth capability=\"update\">\n  \n   <Button onClick={() => props.toggleComplete(item.id)}>\n         {item.complete.toString()===\"true\"?<div style={{background:\"green\"}}>Completed</div>:<div style={{background:\"pink\"}}>Pending</div>}</Button>        </Auth>\n         <Auth capability=\"delete\"> <Button style={{background:\"#008075\"}} intent=\"danger\" onClick={() => props.deleteItem(item.id)}>Delete</Button></Auth>\n\n        </div>\n      );\n    });\n  const pageCount = Math.ceil(props.list.length / usersPage);\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n  return (\n    <>\n\n\n      {displayUsers}\n      <ReactPaginate\n\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n    </>\n  );\n}\n\nexport default List;\n","import React from 'react'\nimport {  Card, Elevation, FormGroup, Button } from \"@blueprintjs/core\";\n\nfunction SettingForm() {\n    const handleSubmit=e=>{\n        e.preventDefault();\n        let display=e.target.disply.value\n\n        let numberOfItem=e.target.numberOfItem.value\n        \n        let obj ={\n            display:display,\n\n            \n            numberOfItem:numberOfItem\n        }\n        setItem (obj)\n        e.target.reset()\n        window.location.href=\"/\";\n    }\n    \n     \n             \nfunction setItem (obj){\n    localStorage.setItem('SettingForm', JSON.stringify(obj));\n}\n    return (\n        <div>\n            <div className=\"toDo\">\n          <Card interactive={true} elevation={Elevation.TWO}>\n          <form  onSubmit={handleSubmit}>\n          <h2>Choose Setting</h2>\n              <FormGroup label=\"show completed tasks\" labelFor=\"disply\">\n                  <select name=\"disply\" dir=\"auto\" className=\"bp3-input .modifier\">\n                      <option value={true}>true</option>\n                      <option value={false}>false</option>\n                  </select>\n               \n              </FormGroup>\n              <FormGroup label=\"numberOfItem per page \" labelFor=\"assignee\">\n                <input\n                  className=\"bp3-input .modifier\"\n                  name=\"numberOfItem\"\n                  type=\"text\"\n                  placeholder=\"numberOfItem per page\"\n                  dir=\"auto\"\n                />\n              </FormGroup>\n              <br />\n              \n\n              \n                <Button type=\"submit\" style={{background:\"#008075\"}}>Try ✴️</Button>\n      </form>\n          </Card>\n        </div>\n        </div>\n    )\n}\n\nexport default SettingForm","import React from 'react';\nimport { useState, useContext } from 'react';\nimport { useEffect } from 'react';\nimport useForm from '../hooks/Form';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\nimport { Button, FormGroup } from '@blueprintjs/core';\nimport { Card, Elevation } from \"@blueprintjs/core\";\nimport LoginProvider, { LoginContext } from '../context/loginContext';\nimport Auth from './Auth';\nimport Setting from './Setting';\nimport { When } from 'react-if';\nconst ToDo = () => {\n  const login = useContext(LoginContext);\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n    <When condition={login.loggedIn}>\n<Auth capability='create'>\n    <Card interactive={true} elevation={Elevation.TWO}>\n      <div className=\"mainsec\">\n      <h1>To Do List  ({incomplete})</h1>\n\n        <div className=\"mainCards\">\n\n\n          <form onSubmit={handleSubmit}>\n\n            <h2>Add To Do Item</h2>\n\n            <label>\n              <span>To Do Item</span>\n              <input onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" class=\"bp3-input .modifier\" type=\"text\" dir=\"auto\" />\n\n            </label>\n\n            <label>\n              <span>Assigned To</span>\n              <input class=\"bp3-input .modifier\" type=\"text\" onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" dir=\"auto\" />\n\n            </label>\n\n            <label>\n              <span>Difficulty</span>\n\n              <input onChange={handleChange} defaultValue={3} type=\"range\" min={1}\n                max={5}\n                name=\"difficulty\"\n                dir=\"auto\"\n              />\n            </label>\n\n            <label>\n              <Button data-testid=\"button-test\" type=\"submit\" rightIcon=\"arrow-right\" intent=\"success\" text=\"Add Item\" />\n\n            </label>\n          </form>\n\n          <List list={list} toggleComplete={toggleComplete} deleteItem={deleteItem} />\n        </div>\n      </div>\n    </Card>\n    <Setting/>\n    </Auth>\n    </When>\n  )\n};\n\nexport default ToDo;","// // import React from 'react';\n// // import cookie from 'react-cookies';\n// // import jwt from 'jsonwebtoken';\n\n// // const testUsers = {\n// //   admin: {password:'password', name:'Administrator', role:'admin', capabilities:['create','read','update','delete']},\n// //   editor: { password: 'password', name: 'Editor', role: 'editor', capabilities: ['read', 'update']},\n// //   writer: { password: 'password', name: 'Writer', role: 'writer', capabilities: ['create']},\n// // };\n\n// // export const LoginContext = React.createContext();\n\n// // class LoginProvider extends React.Component {\n\n// //   constructor(props) {\n// //     super(props);\n// //     this.state = {\n// //       loggedIn: false,\n// //       can: this.can,\n// //       login: this.login,\n// //       logout: this.logout,\n// //       user: {capabilities:[]},\n// //     };\n// //   }\n\n// //   can = (capability) => {\n// //     return this?.state?.user?.capabilities?.includes(capability);\n// //   }\n\n// //   login = (username, password) => {\n// //     if (testUsers[username]) {\n// //       // Create a \"good\" token, like you'd get from a server\n// //       const token = jwt.sign(testUsers[username], process.env.REACT_APP_SECRET || 'Dima');\n// //       this.validateToken(token);\n// //     }\n// //   }\n\n// //   logout = () => {\n// //     this.setLoginState(false, null, {});\n// //   };\n\n// //   validateToken = token => {\n// //     try {\n// //       let user = jwt.verify(token, process.env.REACT_APP_SECRET || 'Dima');\n// //       this.setLoginState(true, token, user);\n// //     }\n// //     catch (e) {\n// //       this.setLoginState(false, null, {});\n// //       console.log('Token Validation Error', e);\n// //     }\n\n// //   };\n\n// //   setLoginState = (loggedIn, token, user) => {\n// //     cookie.save('auth', token);\n// //     this.setState({ token, loggedIn, user });\n// //   };\n\n// //   componentDidMount() {\n// //     const qs = new URLSearchParams(window.location.search);\n// //     const cookieToken = cookie.load('auth');\n// //     const token = qs.get('token') || cookieToken || null;\n// //     this.validateToken(token);\n// //   }\n\n// //   render() {\n// //     return (\n// //       <LoginContext.Provider value={this.state}>\n// //         {this.props.children}\n// //       </LoginContext.Provider>\n// //     );\n// //   }\n// // }\n\n// // export default LoginProvider;\n\n// import React, { useState, useEffect } from \"react\";\n// import superagent from \"superagent\";\n// import base64 from \"base-64\";\n// import cookie from \"react-cookies\";\n// import jwt from \"jsonwebtoken\";\n\n// export const LoginContext = React.createContext();\n// const API = \"https://dimaalabsiauth-api.herokuapp.com\";\n// export default function LoginProvider(props) {\n//   const [loggedIn, setLoggedIn] = useState(false);\n//   const [user, setUser] = useState({});\n\n//   const login = async (username, password) => {\n//     try {\n//       const response = await superagent\n//         .post(`${API}/signin`)\n//         .set(\n//           \"authorization\",\n//           `Basic ${base64.encode(`${username}:${password}`)}`\n//         );\n//       console.log(response.body);\n//       validateMyToken(response.body.token);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n//   const signUp = async (username, password, role) => {\n//     try {\n//       let obj = {\n//         username: username,\n//         password: password,\n//         role: role,\n//       };\n//       const response = await superagent.post(`${API}/signup`, obj);\n//       console.log(response.body);\n//       validateMyToken(response.body.token);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   // initial render\n//   useEffect(() => {\n//     const myTokenCookie = cookie.load(\"token\"); // read the cookie from browser\n//     console.log(\"myTokenCookie: \", myTokenCookie);\n//     console.log(\"initial render here !!\");\n//     validateMyToken(myTokenCookie);\n//   }, []);\n\n//   function validateMyToken(token) {\n//     if (token) {\n//       const user = jwt.decode(token); // get user object and info\n//       // NOTE: adding it hardcoded because our API doesnt have it\n\n//       setLoginState(true, user);\n//       cookie.save(\"token\", token);\n//       // add the token as a cookie in your API response , add time expiry\n//     } else {\n//       setLoginState(false, {});\n//     }\n//   }\n\n//   const setLoginState = (isLoggedIn, user) => {\n//     setLoggedIn(isLoggedIn);\n//     setUser(user);\n//   };\n\n//   const logout = () => {\n//     setLoggedIn(false);\n//     setUser({});\n//     cookie.remove(\"token\");\n\n    \n    \n//   };\n//   const can = (capability) => {\n//     return user?.capabilities?.includes(capability);\n// };\n\n//   const state = {\n//     loggedIn: loggedIn,\n//     login: login,\n//     logout: logout,\n//     user: user,\n//     signUp: signUp,\n//     can:can\n//   };\n\n//   return (\n//     <LoginContext.Provider value={state}>\n//       {props.children}\n//     </LoginContext.Provider>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport superagent from \"superagent\";\nimport base64 from 'base-64';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\nimport { setList } from \"../components/Todo\";\nexport const LoginContext = React.createContext();\nconst API = 'https://dimaalabsiauth-api.herokuapp.com/signin';\n\nexport default function LoginProvider(props) {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [user, setUser] = useState({});\n    // initial render\n    useEffect(() => {\n        const qs = new URLSearchParams(window.location.search);\n        const cookieToken = cookie.load('auth');\n        const token = qs.get('token') || cookieToken || null;\n        validateJwToken(token);\n    }, []);\n    \n    const login = async (username, password) => {\n        // {username: password} encoded\n        //Basic base64(username:password)\n        \n        const encodedUsernameAndPassword =\n            base64.encode(`${username}:${password.toUpperCase()}`);\n            \n        const response = await superagent.post(`${API}`)\n            .set('authorization', `Basic ${encodedUsernameAndPassword}`)\n            .set('Access-Control-Allow-Origin', '*');\n            validateJwToken(response.body.token);\n\n            let data = localStorage.getItem('logout');\n            let listData = JSON.parse(data);\n\n     \n\n\n    }\n\n    const validateJwToken = (token) => {\n        if (token) {\n            // the user is logged in\n            const user = jwt.decode(token);\n            setLoginState(true, user);\n\n\n            cookie.save('token', token)\n        } else {\n            // the user is NOT logged in\n            setLoginState(false, {});\n        }\n    }\n    \n    const setLoginState = (loggedIn, user) => {\n        setLoggedIn(loggedIn);\n        setUser(user);\n    }\n\n    const logout = () => {\n        setLoginState(false, {});\n        cookie.remove('token');\n\n        let data = localStorage.getItem('list');\n        let listData = JSON.parse(data);\n        let parsedData = JSON.stringify(listData);\n        localStorage.setItem('logout' , parsedData);\n    }\n\n    const can = (capability) => {\n        return user?.capabilities?.includes(capability);\n    };\n    \n    const state = {\n        loggedIn,\n        login,\n        logout,\n        user,\n        can\n    }\n\n    return (\n        <LoginContext.Provider value={state}>\n            {props.children}\n        </LoginContext.Provider>\n    )\n}","// import React from 'react';\n// import {When} from 'react-if';\n\n// import { LoginContext } from '../context/loginContext';\n\n// class Login extends React.Component {\n//   static contextType = LoginContext;\n\n//   constructor(props) {\n//     super(props);\n//     this.state = { username: '', password: '' };\n//   }\n\n//   handleChange = e => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.context.login(this.state.username, this.state.password);\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <When condition={this.context.loggedIn}>\n//           <button onClick={this.context.logout}>Log Out</button>\n//         </When>\n\n//         <When condition={!this.context.loggedIn}>\n//           <form onSubmit={this.handleSubmit}>\n//             <input\n//               placeholder=\"UserName\"\n//               name=\"username\"\n//               onChange={this.handleChange}\n//             />\n//             <input\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//             />\n//             <button>Login</button>\n//           </form>\n//         </When>\n//       </>\n//     );\n//   }\n// }\n\n// export default Login;\n\nimport React, { useContext } from 'react'\nimport { Button, FormGroup, Menu, MenuItem } from '@blueprintjs/core';\nimport useForm from '../hooks/Form';\nimport { LoginContext } from '../context/loginContext';\n\n\nexport default function LoginForm() {\n    const login = useContext(LoginContext);\n    const { handleChange, handleSubmit } = useForm(handleLogin);\n\n    function handleLogin(user) {\n        login.login(user.username , user.password)\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n\n                <h2>LogIn</h2>\n\n                <label>\n                    <span>User Name</span>\n                    <input onChange={handleChange} name=\"username\" type=\"text\" placeholder=\"username\" />\n\n                </label>\n\n                \n                <label>\n                    <span>Password</span>\n                    <input onChange={handleChange} name=\"password\" type=\"password\" placeholder=\"password\" />\n\n                </label>\n\n\n              \n\n\n                <label>\n                    <Button type=\"submit\">LogIn</Button>\n                </label>\n            </form>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport { Navbar, Button, Alignment } from \"@blueprintjs/core\";\nimport { Link } from \"react-router-dom\";\n\n class Header extends Component {\n    render() {\n        return (\n            <Navbar class=\"bp3-navbar bp3-dark\">\n            <Navbar.Group align={Alignment.LEFT}>\n                <Navbar.Heading>TO DO List Manager 📔</Navbar.Heading>\n                <Navbar.Divider />\n                {/* <a href=\"/todo-app\"> */}\n            {/* <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n          </a>\n          <a href=\"/form\">\n            <Button\n              className=\"bp3-minimal\"\n              icon=\"document\"\n              text=\"setting\"\n            ></Button>\n          </a>\n      <Button class=\"bp3-Button bp3-minimal bp3-icon-notifications\"></Button> */}\n            </Navbar.Group>\n        </Navbar>\n        )\n    }\n}\n\nexport default Header\n","import React, { Component } from 'react';\n\n class Footer extends Component {\n    render() {\n        return (\n            <div className=\"bp3-navbar bp3-dark\" id=\"footer\" >\n            <p> &copy; Dima Alabsi 2021 </p>    \n            </div>\n        )\n    }\n}\n\nexport default Footer\n","import React, { useState,useContext } from 'react'\nimport { LoginContext } from \"../context/loginContext\";\nfunction Signup() {\n    let  context=useContext(LoginContext)\n\t// console.log(conv);\n\tlet [userName,setUserName]=useState('')\n\tlet [password,setPassword]=useState('')\n    let [role,setRole]=useState('user')\n\n\tconst handleInputUser=e=>{\n\t\tsetUserName(e.target.value);\n\t}\n\tconst handleInputPass=e=>{\n\t\tsetPassword(e.target.value);\n\t}\n\tconst handleInputRole=e=>{\n\t\tsetRole(e.target.value);\n\t}\n\tconst handlerSubmit=async e=>{\n\t\te.preventDefault();\n\t\t// handle login function \n\t\tawait context.signUp(userName, password,role)\n        window.location.href=\"/\"\n\t}\n    return (\n        <div>\n            <header>\n            <nav className=\"bp3-navbar .modifier bp3-dark\" >\n        <div className=\"bp3-navbar-group bp3-align-left\">\n          <div className=\"bp3-navbar-heading\">TO-DO</div>\n          \n        </div>\n        <div className=\"bp3-navbar-group bp3-align-right\">\n    \n\n        </div>\n      </nav>\n            </header>\n            <section className=\"ftco-section\">\n        <div className=\"container\">\n          \n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-6 col-lg-5\">\n              <div className=\"login-wrap p-4 p-md-5\">\n                <div className=\"icon d-flex align-items-center justify-content-center\">\n                  <span className=\"fa fa-user-o\">S-UP</span>\n                </div>\n               \n                <form onSubmit={handlerSubmit}>\n                  <div className=\"form-group\">\n                    <input\n\t\t\t\t\t \n\t\t\t\t\t  onChange={handleInputUser}\n                      type=\"text\"\n                      className=\"form-control rounded-left\"\n                      placeholder=\"Username\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group d-flex\">\n                    <input\n\t\t\t\t\t  onChange={handleInputPass}\n                      type=\"password\"\n                      className=\"form-control rounded-left\"\n                      placeholder=\"Password\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group d-flex\">\n                      <select  className=\"form-control rounded-left\"\n                                onChange={handleInputRole}>\n                          <option value='user'>user</option>\n                          <option value='admin'>admin</option>\n                      </select>\n                    \n                  </div>\n                  <br />\n                 <p>already have account  <a href='/'> login</a></p>\n                  <div className=\"form-group\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary rounded submit p-3 px-5\"\n                      style={{margin:\"0 0 0 75px\"}}\n                    >\n                      confirm & login\n                    </button>\n                    \n                    \n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n        </div>\n    )\n}\n\nexport default Signup","import React, { useContext } from 'react';\nimport SettingContext from './context/SettingContext';\nimport Header from './components/Header';\nimport ToDo from './components/Todo';\nimport Footer from './components/Footer';\nimport './App.scss';\nimport { When } from 'react-if';\nimport { LoginContext } from './context/loginContext';\nimport Login from './components/Login';\n// import LoginContext from './context/loginContext';\n// import {LoginContext} from './context/loginContext';\n// import {If, Then, Else} from 'react-if';\nimport Signup from './components/Signup';\nimport SettingForm from './components/Setting';\nexport default class App extends React.Component {\n\n  static contextType = LoginContext;\n  render() {\n    return (\n\n    <>\n        <When condition =  {this.context.loggedIn} >\n        <Header/>\n \n        \n             <ToDo />\n         \n\n          \n             <SettingForm/>\n         \n       \n        </When>\n\n        <When condition = {!this.context.loggedIn}>\n          <Login/>\n        </When>\n        </>\n\n       \n    );\n  }\n}\n// export default function App(props) {\n\n//   const  context  = useContext(LoginContext);\n \n//     return (\n//       <>\n//             <ToDo />\n\n//         {/* <LoginContext>\n//         <Header/>\n//         <Login/>\n//           <SettingContext>\n           \n           \n         \n\n//           </SettingContext>\n//           <Footer/>\n//         </LoginContext> */}\n\n// {/* <If condition={context.loggedIn==true}>\n//             {console.log(context)}\n//             <Then>\n//             <SettingContext>\n//         <Header/>\n//             <ToDo />\n          \n//          <Footer/>  \n        \n       \n        \n//       </SettingContext>\n\n//             </Then>\n//             <Else>\n\n//             <Login/>\n       \n//               <Signup/>\n           \n           \n//             </Else>\n            \n//           </If> */}\n\n\n\n\n\n\n//       </>\n\n//     );\n\n//   }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoginProvider,{LoginContext} from './context/loginContext';\nimport SettingsProvider from './context/SettingContext';\n// import LoginProvider from './context/loginContext';\nimport LoginForm from './components/Login';\n// import { LoginContext } from './context/loginContext';\nimport App from './App';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <LoginProvider>\n      <SettingsProvider>\n        <App />\n      </SettingsProvider>\n    </LoginProvider>\n    )\n      }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}