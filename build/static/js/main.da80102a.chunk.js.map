{"version":3,"sources":["context/SettingContext.js","components/Header.js","hooks/Form.js","components/List.js","context/loginContext.js","components/Auth.js","components/Todo.js","components/Footer.js","components/Setting.js","components/Login.js","App.js","index.js"],"names":["SettingssContext","React","createContext","SettingContext","props","useState","display","setDisplay","numOfItems","setNumOfItems","defaultSort","setDefaultSort","state","useEffect","stringArray","localStorage","getItem","objectArray","JSON","parse","Number","numberOfItem","clear","Provider","value","children","Header","class","Group","align","Alignment","LEFT","Heading","Divider","Component","useForm","callback","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","List","settings","useContext","pageNumber","setPageNumber","usersPage","pages","displayUsers","list","slice","map","item","style","width","margin","text","assignee","difficulty","onClick","toggleComplete","id","complete","toString","deleteItem","type","intent","pageCount","Math","ceil","length","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","testUsers","admin","password","role","capabilities","editor","writer","LoginContext","LoginProvider","can","capability","user","includes","login","username","token","jwt","sign","process","REACT_APP_SECRET","validateToken","logout","setLoginState","verify","e","console","log","loggedIn","cookie","save","setState","qs","URLSearchParams","window","location","search","cookieToken","load","get","this","Login","isLoggedIn","context","canDo","okToRender","condition","contextType","ToDo","setList","incomplete","setIncomplete","uuid","incompleteCount","filter","document","title","Auth","interactive","elevation","Elevation","TWO","className","onSubmit","onChange","placeholder","defaultValue","min","max","dir","rightIcon","items","Footer","SettingForm","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.da80102a.chunk.js","sourcesContent":["import React from 'react';\nexport const SettingssContext = React.createContext();\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n function SettingContext(props) {\n\nconst [display,setDisplay]=useState(false)\nconst [numOfItems,setNumOfItems]=useState(2)\nconst [defaultSort,setDefaultSort]=useState('do')\nconst state ={\ndisplay ,\nnumOfItems,\ndefaultSort,\nsetDisplay,\nsetNumOfItems,\nsetDefaultSort\n}\nuseEffect(()=>{\nlet stringArray =localStorage.getItem('SettingForm');\nlet objectArray= JSON.parse(stringArray);\n\nif(objectArray){\n    setNumOfItems(Number(objectArray.numberOfItem))\n}\nlocalStorage.clear()\n},[])\n\n    return (\n        <>\n          <SettingssContext.Provider value={state}>\n          {props.children}\n          </SettingssContext.Provider>  \n        </>\n    )\n}\n\nexport default SettingContext;\n\n","import React, { Component } from 'react';\nimport { Navbar, Button, Alignment } from \"@blueprintjs/core\";\nimport { Link } from \"react-router-dom\";\n\n class Header extends Component {\n    render() {\n        return (\n            <Navbar class=\"bp3-navbar bp3-dark\">\n            <Navbar.Group align={Alignment.LEFT}>\n                <Navbar.Heading>TO DO List Manager ðŸ“”</Navbar.Heading>\n                <Navbar.Divider />\n                {/* <a href=\"/todo-app\"> */}\n            {/* <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n          </a>\n          <a href=\"/form\">\n            <Button\n              className=\"bp3-minimal\"\n              icon=\"document\"\n              text=\"setting\"\n            ></Button>\n          </a>\n      <Button class=\"bp3-Button bp3-minimal bp3-icon-notifications\"></Button> */}\n            </Navbar.Group>\n        </Navbar>\n        )\n    }\n}\n\nexport default Header\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;","import React from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { SettingssContext } from '../context/SettingContext';\nimport { Button } from '@blueprintjs/core';\nimport ReactPaginate from \"react-paginate\";\nfunction List(props) {\n  const settings = useContext(SettingssContext)\n  const [pageNumber, setPageNumber] = useState(0);\n  const usersPage = settings.numOfItems;\n  const pages = pageNumber * usersPage;\n\n  const displayUsers = props.list.slice(pages, pages + usersPage)\n    .map((item) => {\n      return (\n\n        <div key={item.id} style={{ width: \"650px\", margin: \"15px\" }}>\n\n          <p>{item.text}</p>\n          <p>\n            <small>Assigned to: {item.assignee}</small>\n          </p>\n          <p>\n            <small>Difficulty: {item.difficulty}</small>\n          </p>\n\n          <Button  onClick={() => props.toggleComplete(item.id)}>\n            Complete: {item.complete.toString()}</Button>\n            <Button  onClick={() => props.deleteItem(item.id)} type=\"submit\"  intent=\"danger\" text=\"delete\" />\n\n        </div>\n      );\n    });\n  const pageCount = Math.ceil(props.list.length / usersPage);\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n  return (\n    <>\n\n\n      {displayUsers}\n      <ReactPaginate\n\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n    </>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport cookie from 'react-cookies';\nimport jwt from 'jsonwebtoken';\n\nconst testUsers = {\n  admin: {password:'password', name:'Administrator', role:'admin', capabilities:['create','read','update','delete']},\n  editor: { password: 'password', name: 'Editor', role: 'editor', capabilities: ['read', 'update']},\n  writer: { password: 'password', name: 'Writer', role: 'writer', capabilities: ['create']},\n};\n\nexport const LoginContext = React.createContext();\n\nclass LoginProvider extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      can: this.can,\n      login: this.login,\n      logout: this.logout,\n      user: {capabilities:[]},\n    };\n  }\n\n  can = (capability) => {\n    return this?.state?.user?.capabilities?.includes(capability);\n  }\n\n  login = (username, password) => {\n    if (testUsers[username]) {\n      // Create a \"good\" token, like you'd get from a server\n      const token = jwt.sign(testUsers[username], process.env.REACT_APP_SECRET || 'Dima');\n      this.validateToken(token);\n    }\n  }\n\n  logout = () => {\n    this.setLoginState(false, null, {});\n  };\n\n  validateToken = token => {\n    try {\n      let user = jwt.verify(token, process.env.REACT_APP_SECRET || 'Dima');\n      this.setLoginState(true, token, user);\n    }\n    catch (e) {\n      this.setLoginState(false, null, {});\n      console.log('Token Validation Error', e);\n    }\n\n  };\n\n  setLoginState = (loggedIn, token, user) => {\n    cookie.save('auth', token);\n    this.setState({ token, loggedIn, user });\n  };\n\n  componentDidMount() {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load('auth');\n    const token = qs.get('token') || cookieToken || null;\n    this.validateToken(token);\n  }\n\n  render() {\n    return (\n      <LoginContext.Provider value={this.state}>\n        {this.props.children}\n      </LoginContext.Provider>\n    );\n  }\n}\n\nexport default LoginProvider;","import React from 'react';\nimport {When} from 'react-if';\n\nimport { LoginContext } from '../context/loginContext';\n\nclass Login extends React.Component {\n\n  static contextType = LoginContext;\n\n  render() {\n\n    const isLoggedIn = this.context.loggedIn;\n    const canDo = this.props.capability ? this.context.can(this.props.capability) : true;\n    const okToRender = isLoggedIn && canDo;\n\n    return (\n      <When condition={okToRender}>\n        {this.props.children}\n      </When>\n    );\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport useForm from '../hooks/Form';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\nimport { Button, FormGroup } from '@blueprintjs/core';\nimport { Card, Elevation } from \"@blueprintjs/core\";\nimport Auth from './Auth';\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n\n<Auth capability='create'>\n    <Card interactive={true} elevation={Elevation.TWO}>\n      <div className=\"mainsec\">\n        <h2 id='h2'>To Do List: {incomplete.length} items pending </h2>\n\n        <div className=\"mainCards\">\n\n\n          <form onSubmit={handleSubmit}>\n\n            <h2>Add To Do Item</h2>\n\n            <label>\n              <span>To Do Item</span>\n              <input onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" class=\"bp3-input .modifier\" type=\"text\" dir=\"auto\" />\n\n            </label>\n\n            <label>\n              <span>Assigned To</span>\n              <input class=\"bp3-input .modifier\" type=\"text\" onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" dir=\"auto\" />\n\n            </label>\n\n            <label>\n              <span>Difficulty</span>\n\n              <input onChange={handleChange} defaultValue={3} type=\"range\" min={1}\n                max={5}\n                name=\"difficulty\"\n                dir=\"auto\"\n              />\n            </label>\n\n            <label>\n              <Button data-testid=\"button-test\" type=\"submit\" rightIcon=\"arrow-right\" intent=\"success\" text=\"Add Item\" />\n\n            </label>\n          </form>\n\n          <List list={list} toggleComplete={toggleComplete} deleteItem={deleteItem} />\n        </div>\n      </div>\n    </Card>\n    </Auth>\n  )\n};\n\nexport default ToDo;","import React, { Component } from 'react';\n\n class Footer extends Component {\n    render() {\n        return (\n            <div className=\"bp3-navbar bp3-dark\" id=\"footer\" >\n            <p> &copy; Dima Alabsi 2021 </p>    \n            </div>\n        )\n    }\n}\n\nexport default Footer\n","import React from 'react'\nimport {  Card, Elevation } from \"@blueprintjs/core\";\nfunction SettingForm() {\n    const handleChange=e=>{\n        e.preventDefault();\n      \n        let numberOfItem=e.target.value\n        \n        let obj ={\n          \n            numberOfItem:numberOfItem\n        }\n        setItem (obj)\n \n    }\n \n     \n             \nfunction setItem (obj){\n    localStorage.setItem('SettingForm', JSON.stringify(obj));\n}\n    return (\n        <div>\n            <div className=\"toDo\">\n          <Card interactive={true} elevation={Elevation.TWO}>\n          <form>\n        <label>Num of Items  </label>\n        <input type=\"text\" onChange={handleChange} />\n      </form>\n          </Card>\n        </div>\n        </div>\n    )\n}\n\nexport default SettingForm","import React from 'react';\nimport {When} from 'react-if';\n\nimport { LoginContext } from '../context/loginContext';\n\nclass Login extends React.Component {\n  static contextType = LoginContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.context.login(this.state.username, this.state.password);\n  };\n\n  render() {\n    return (\n      <>\n        <When condition={this.context.loggedIn}>\n          <button onClick={this.context.logout}>Log Out</button>\n        </When>\n\n        <When condition={!this.context.loggedIn}>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              placeholder=\"UserName\"\n              name=\"username\"\n              onChange={this.handleChange}\n            />\n            <input\n              placeholder=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n            <button>Login</button>\n          </form>\n        </When>\n      </>\n    );\n  }\n}\n\nexport default Login;","import React from 'react';\nimport SettingContext from './context/SettingContext';\nimport Header from './components/Header';\nimport ToDo from './components/Todo';\nimport Footer from './components/Footer';\nimport './App.scss';\nimport Setting from './components/Setting';\nimport Login from './components/Login';\nimport LoginContext from './context/loginContext';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n\n        <LoginContext>\n        <Login/>\n          <SettingContext>\n            <Header/>\n            <ToDo />\n            <Footer/>\n         \n\n          </SettingContext>\n          \n        </LoginContext>\n\n\n\n\n\n\n      </>\n\n    );\n\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}