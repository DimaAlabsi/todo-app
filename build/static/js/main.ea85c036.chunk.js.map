{"version":3,"sources":["context/SettingContext.js","components/Header.js","hooks/Form.js","components/List.js","components/Todo.js","components/Footer.js","components/Setting.js","App.js","index.js"],"names":["SettingssContext","React","createContext","SettingContext","props","useState","display","setDisplay","numOfItems","setNumOfItems","defaultSort","setDefaultSort","state","useEffect","stringArray","localStorage","getItem","objectArray","JSON","parse","Number","numberOfItem","clear","Provider","value","children","Header","class","Group","align","Alignment","LEFT","Heading","Divider","href","className","icon","text","Component","useForm","callback","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","List","settings","useContext","pageNumber","setPageNumber","usersPage","pages","displayUsers","list","slice","map","item","style","width","margin","assignee","difficulty","onClick","toggleComplete","id","complete","toString","deleteItem","type","intent","pageCount","Math","ceil","length","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","ToDo","setList","incomplete","setIncomplete","uuid","incompleteCount","filter","document","title","interactive","elevation","Elevation","TWO","onSubmit","onChange","placeholder","defaultValue","min","max","dir","rightIcon","items","Footer","SettingForm","e","obj","setItem","stringify","App","exact","path","Setting","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ea85c036.chunk.js","sourcesContent":["import React from 'react';\nexport const SettingssContext=React.createContext();\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n function SettingContext(props) {\n\nconst [display,setDisplay]=useState(false)\nconst [numOfItems,setNumOfItems]=useState(2)\nconst [defaultSort,setDefaultSort]=useState('you have to do this')\nconst state ={\ndisplay ,\nnumOfItems,\ndefaultSort,\nsetDisplay,\nsetNumOfItems,\nsetDefaultSort\n}\nuseEffect(()=>{\nlet stringArray =localStorage.getItem('SettingForm');\nlet objectArray= JSON.parse(stringArray);\n\nif(objectArray){\n    setNumOfItems(Number(objectArray.numberOfItem))\n}\nlocalStorage.clear()\n},[])\n\n    return (\n        <>\n          <SettingssContext.Provider value={state}>\n          {props.children}\n          </SettingssContext.Provider>  \n        </>\n    )\n}\n\nexport default SettingContext;\n\n","import React, { Component } from 'react';\nimport { Navbar, Button, Alignment } from \"@blueprintjs/core\";\nimport { Link } from \"react-router-dom\";\n\n class Header extends Component {\n    render() {\n        return (\n            <Navbar class=\"bp3-navbar bp3-dark\">\n            <Navbar.Group align={Alignment.LEFT}>\n                <Navbar.Heading>TO DO List Manager ðŸ“”</Navbar.Heading>\n                <Navbar.Divider />\n                <a href=\"/todo-app\">\n            <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n          </a>\n          <a href=\"/form\">\n            <Button\n              className=\"bp3-minimal\"\n              icon=\"document\"\n              text=\"setting\"\n            ></Button>\n          </a>\n      <Button class=\"bp3-Button bp3-minimal bp3-icon-notifications\"></Button>\n            </Navbar.Group>\n        </Navbar>\n        )\n    }\n}\n\nexport default Header\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;","import React from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { SettingssContext } from '../context/SettingContext';\nimport { Button } from '@blueprintjs/core';\nimport ReactPaginate from \"react-paginate\";\nfunction List(props) {\n  const settings = useContext(SettingssContext)\n  const [pageNumber, setPageNumber] = useState(0);\n  const usersPage = settings.numOfItems;\n  const pages = pageNumber * usersPage;\n\n  const displayUsers = props.list.slice(pages, pages + usersPage)\n    .map((item) => {\n      return (\n\n        <div key={item.id} style={{ width: \"650px\", margin: \"15px\" }}>\n\n          <p>{item.text}</p>\n          <p>\n            <small>Assigned to: {item.assignee}</small>\n          </p>\n          <p>\n            <small>Difficulty: {item.difficulty}</small>\n          </p>\n\n          <Button onClick={() => props.toggleComplete(item.id)}>\n            Complete: {item.complete.toString()}</Button>\n            <Button  onClick={() => props.deleteItem(item.id)} type=\"submit\"  intent=\"danger\" text=\"delete\" />\n\n        </div>\n      );\n    });\n  const pageCount = Math.ceil(props.list.length / usersPage);\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n  return (\n    <>\n\n\n      {displayUsers}\n      <ReactPaginate\n\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n    </>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport useForm from '../hooks/Form';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\nimport { Button, FormGroup } from '@blueprintjs/core';\nimport {  Card, Elevation } from \"@blueprintjs/core\";\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n\n\n    <Card interactive={true} elevation={Elevation.TWO}>\n    <div className=\"mainsec\">\n    <h2 id='h2'>To Do List: {incomplete.length} items pending </h2>\n\n    <div className=\"mainCards\">\n\n\n    <form onSubmit={handleSubmit}>\n\n<h2>Add To Do Item</h2>\n\n<label>\n  <span>To Do Item</span>\n  <input onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\"  class=\"bp3-input .modifier\"  type=\"text\" dir=\"auto\" />\n\n</label>\n\n<label>\n  <span>Assigned To</span>\n  <input class=\"bp3-input .modifier\"  type=\"text\"  onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" dir=\"auto\" />\n\n</label>\n\n<label>\n  <span>Difficulty</span>\n\n  <input  onChange={handleChange}     defaultValue={3} type=\"range\" min={1}\n                  max={5}\n                  name=\"difficulty\"\n                  dir=\"auto\"\n                />\n</label>\n\n<label>\n  <Button   type=\"submit\" rightIcon=\"arrow-right\" intent=\"success\" text=\"Add Item\" />\n\n</label>\n</form>\n\n      <List  list={list} toggleComplete={toggleComplete} deleteItem={deleteItem}/>\n    </div>\n  </div>\n  </Card>\n  )\n};\n\nexport default ToDo;","import React, { Component } from 'react';\n\n class Footer extends Component {\n    render() {\n        return (\n            <div className=\"bp3-navbar bp3-dark\" id=\"footer\" >\n            <p> &copy; Dima Alabsi 2021 </p>    \n            </div>\n        )\n    }\n}\n\nexport default Footer\n","import React from 'react'\nimport {  Card, Elevation } from \"@blueprintjs/core\";\nfunction SettingForm() {\n    const handleChange=e=>{\n        e.preventDefault();\n      \n        let numberOfItem=e.target.value\n        \n        let obj ={\n          \n            numberOfItem:numberOfItem\n        }\n        setItem (obj)\n \n    }\n \n     \n             \nfunction setItem (obj){\n    localStorage.setItem('SettingForm', JSON.stringify(obj));\n}\n    return (\n        <div>\n            <div className=\"toDo\">\n          <Card interactive={true} elevation={Elevation.TWO}>\n          <form>\n        <label>Num of Items  </label>\n        <input type=\"text\" onChange={handleChange} />\n      </form>\n          </Card>\n        </div>\n        </div>\n    )\n}\n\nexport default SettingForm","import React from 'react';\nimport SettingContext from './context/SettingContext';\nimport Header from './components/Header';\nimport ToDo from './components/Todo';\nimport Footer from './components/Footer';\nimport './App.scss';\nimport Setting from './components/Setting';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nexport default class App extends React.Component {\n  render() {\n    return (\n        <>\n         <Router>\n        <Switch>\n        <SettingContext>\n        <Route exact path=\"/todo-app\">\n        <Header/>\n      <ToDo />\n    \n      <Footer/>\n      </Route> \n      <Route path=\"/form\">\n         <Header/>\n            <Setting/>\n            <Footer/>\n         </Route>\n      </SettingContext>\n      </Switch>\n      </Router>\n      </>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}